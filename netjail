#!/bin/bash

#these parameters are used when the script is called by openvpn
[ -n $dev ] && NS_NAME="${dev}"
case "$script_type" in
"up")
  ip netns add $NS_NAME
  ip netns exec $NS_NAME ip link set dev lo up
  ip link set dev "$1" up netns $NS_NAME mtu "$2"
  ip netns exec $NS_NAME ip addr add dev "$1" "$4/${ifconfig_netmask:-30}" ${ifconfig_broadcast:+broadcast "$ifconfig_broadcast"}
  exit 0
;;
"route-up")
  ip netns exec $NS_NAME ip route add default via "$route_vpn_gateway"
  exit 0
;;
"down")
  ip netns delete $NS_NAME
  exit
  ;;
esac

## functions
function cleanup {
  ip netns delete $NS_NAME
  kill $(cat $VPN_PID)
  exit 0
}

function show_usage {
	echo -e "Usage: netjail -c <openvpn.conf> [-a <application> [-u <user>]] [-n <netns name>] [-h]"
	echo -e "\t -c file\tspecify the openvpn config file which should be used"
	echo -e "\t -a application\toptional: specify a application to run inside the netns"
	echo -e "\t -u user\toptional: specify a user to run the application inside the netns"
	echo -e "\t -h\t\tshow this help"
	exit $1
}

#avoid a running openvpn after script is cancled
trap cleanup SIGKILL
trap cleanup SIGINT

#check priv/args
if [ "$(id -u)" != "0" ]; then
  echo "You need to be root to work with network namespaces!"
  exit
fi

# cmd arguments parsing
while getopts "a:c:u:n:h" OPT; do
  case $OPT in
    c)
      OVPN_CONFIG="$OPTARG" 
      ;;
    a)
      APP="$(which $OPTARG)" || exit 1
      ;;
    u)
      USERID="$(id -u $OPTARG)"
      ;;
    n)
      NS_NAME="$OPTARG"
      ;;
    -h)
      show_usage 0
      ;;
    *)
      show_usage 1
      ;;
  esac
done

[ -z "$*" ] && show_usage && exit 1
[ -z $OVPN_CONFIG ] && echo "Please give a OpenVPN Config file" && show_usage 1
[ -r $OVPN_CONFIG ] || { echo "Cannot reading OpenVPN config file" && show_usage 1; }
[ $APP ] && [ -z $USERID ] && echo "Please specify a user to run a program" && show_usage 1

## defaults
[ -z $NS_NAME ] && NS_NAME="netjail"

## implicit parameters
OVPN_CONFIGDIR=$(dirname $OVPN_CONFIG )
VPN_DEV="$NS_NAME"
VPN_PID="/tmp/$NS_NAME-vpn.pid"
SELF=$(readlink -f $0)

#start VPN
openvpn --config $OVPN_CONFIG --writepid $VPN_PID --dev $VPN_DEV --dev-type tun --daemon --cd "$OVPN_CONFIGDIR" --route-noexec --ifconfig-noexec --up $SELF --route-up $SELF --script-security 2

#wait for VPN_IP
while [ -z "$VPN_IP" ]; do
  VPN_IP=$(ip netns exec $NS_NAME ip addr show dev $VPN_DEV 2>&1 | grep inet | awk '{print $2}' | cut -f 1 -d / &2>/dev/null)
  sleep 1
done

if [ $APP ]; then
  #start application in namespace
  ip netns exec $NS_NAME sudo -u "#$USERID" -H -g "#$USERID" /bin/bash -c "export DBUS_SESSION_BUS_ADDRESS='unix:path=/run/user/$USERID/bus'; $APP"
  cleanup
fi
